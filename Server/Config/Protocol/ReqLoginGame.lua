-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Protocol

local flatbuffers = require('flatbuffers')

local ReqLoginGame = {} -- the module
local ReqLoginGame_mt = {} -- the class metatable

function ReqLoginGame.New()
    local o = {}
    setmetatable(o, {__index = ReqLoginGame_mt})
    return o
end
function ReqLoginGame.GetRootAsReqLoginGame(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = ReqLoginGame.New()
    o:Init(buf, n + offset)
    return o
end
function ReqLoginGame_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function ReqLoginGame_mt:Name()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function ReqLoginGame_mt:Password()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function ReqLoginGame_mt:Channel()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function ReqLoginGame_mt:SubChannel()
    local o = self.view:Offset(10)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function ReqLoginGame_mt:ChannelName()
    local o = self.view:Offset(12)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function ReqLoginGame.Start(builder) builder:StartObject(5) end
function ReqLoginGame.AddName(builder, name) builder:PrependUOffsetTRelativeSlot(0, name, 0) end
function ReqLoginGame.AddPassword(builder, password) builder:PrependUOffsetTRelativeSlot(1, password, 0) end
function ReqLoginGame.AddChannel(builder, channel) builder:PrependInt32Slot(2, channel, 0) end
function ReqLoginGame.AddSubChannel(builder, subChannel) builder:PrependInt32Slot(3, subChannel, 0) end
function ReqLoginGame.AddChannelName(builder, channelName) builder:PrependUOffsetTRelativeSlot(4, channelName, 0) end
function ReqLoginGame.End(builder) return builder:EndObject() end

return ReqLoginGame -- return the module