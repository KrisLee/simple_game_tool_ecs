-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Protocol

local flatbuffers = require('flatbuffers')

local RoleInfoLite = {} -- the module
local RoleInfoLite_mt = {} -- the class metatable

function RoleInfoLite.New()
    local o = {}
    setmetatable(o, {__index = RoleInfoLite_mt})
    return o
end
function RoleInfoLite.GetRootAsRoleInfoLite(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = RoleInfoLite.New()
    o:Init(buf, n + offset)
    return o
end
function RoleInfoLite_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function RoleInfoLite_mt:RoleId()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function RoleInfoLite_mt:RoleName()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function RoleInfoLite_mt:RoleLevel()
    local o = self.view:Offset(8)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function RoleInfoLite.Start(builder) builder:StartObject(3) end
function RoleInfoLite.AddRoleId(builder, roleId) builder:PrependUOffsetTRelativeSlot(0, roleId, 0) end
function RoleInfoLite.AddRoleName(builder, roleName) builder:PrependUOffsetTRelativeSlot(1, roleName, 0) end
function RoleInfoLite.AddRoleLevel(builder, roleLevel) builder:PrependInt32Slot(2, roleLevel, 0) end
function RoleInfoLite.End(builder) return builder:EndObject() end

return RoleInfoLite -- return the module