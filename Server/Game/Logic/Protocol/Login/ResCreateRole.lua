-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Login

local flatbuffers = require('flatbuffers')

local ResCreateRole = {} -- the module
local ResCreateRole_mt = {} -- the class metatable

function ResCreateRole.New()
    local o = {}
    setmetatable(o, {__index = ResCreateRole_mt})
    return o
end
function ResCreateRole.GetRootAsResCreateRole(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = ResCreateRole.New()
    o:Init(buf, n + offset)
    return o
end
function ResCreateRole_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function ResCreateRole_mt:Result()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:Get(flatbuffers.N.Int32, o + self.view.pos)
    end
    return 0
end
function ResCreateRole_mt:RoleInfo()
    local o = self.view:Offset(6)
    if o ~= 0 then
        local x = self.view:Indirect(o + self.view.pos)
        local obj = require('Protocol.Login.RoleInfo').New()
        obj:Init(self.view.bytes, x)
        return obj
    end
end
function ResCreateRole.Start(builder) builder:StartObject(2) end
function ResCreateRole.AddResult(builder, result) builder:PrependInt32Slot(0, result, 0) end
function ResCreateRole.AddRoleInfo(builder, roleInfo) builder:PrependUOffsetTRelativeSlot(1, roleInfo, 0) end
function ResCreateRole.End(builder) return builder:EndObject() end

return ResCreateRole -- return the module