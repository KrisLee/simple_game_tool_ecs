// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Protocol.Item
{

using global::System;
using global::FlatBuffers;

public struct ItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb) { return GetRootAsItemInfo(_bb, new ItemInfo()); }
  public static ItemInfo GetRootAsItemInfo(ByteBuffer _bb, ItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int ItemId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ItemCount { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<ItemInfo> CreateItemInfo(FlatBufferBuilder builder,
      int itemId = 0,
      int itemType = 0,
      int itemCount = 0) {
    builder.StartObject(3);
    ItemInfo.AddItemCount(builder, itemCount);
    ItemInfo.AddItemType(builder, itemType);
    ItemInfo.AddItemId(builder, itemId);
    return ItemInfo.EndItemInfo(builder);
  }

  public static void StartItemInfo(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddItemId(FlatBufferBuilder builder, int itemId) { builder.AddInt(0, itemId, 0); }
  public static void AddItemType(FlatBufferBuilder builder, int itemType) { builder.AddInt(1, itemType, 0); }
  public static void AddItemCount(FlatBufferBuilder builder, int itemCount) { builder.AddInt(2, itemCount, 0); }
  public static Offset<ItemInfo> EndItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ItemInfo>(o);
  }
};


}
