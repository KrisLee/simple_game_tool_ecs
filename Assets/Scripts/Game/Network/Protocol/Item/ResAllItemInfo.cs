// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Protocol.Item
{

using global::System;
using global::FlatBuffers;

public struct ResAllItemInfo : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static ResAllItemInfo GetRootAsResAllItemInfo(ByteBuffer _bb) { return GetRootAsResAllItemInfo(_bb, new ResAllItemInfo()); }
  public static ResAllItemInfo GetRootAsResAllItemInfo(ByteBuffer _bb, ResAllItemInfo obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public ResAllItemInfo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Result { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public ItemInfo? ItemInfoList(int j) { int o = __p.__offset(6); return o != 0 ? (ItemInfo?)(new ItemInfo()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ItemInfoListLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ResAllItemInfo> CreateResAllItemInfo(FlatBufferBuilder builder,
      int result = 0,
      VectorOffset itemInfoListOffset = default(VectorOffset)) {
    builder.StartObject(2);
    ResAllItemInfo.AddItemInfoList(builder, itemInfoListOffset);
    ResAllItemInfo.AddResult(builder, result);
    return ResAllItemInfo.EndResAllItemInfo(builder);
  }

  public static void StartResAllItemInfo(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddResult(FlatBufferBuilder builder, int result) { builder.AddInt(0, result, 0); }
  public static void AddItemInfoList(FlatBufferBuilder builder, VectorOffset itemInfoListOffset) { builder.AddOffset(1, itemInfoListOffset.Value, 0); }
  public static VectorOffset CreateItemInfoListVector(FlatBufferBuilder builder, Offset<ItemInfo>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateItemInfoListVectorBlock(FlatBufferBuilder builder, Offset<ItemInfo>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartItemInfoListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ResAllItemInfo> EndResAllItemInfo(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ResAllItemInfo>(o);
  }
};


}
